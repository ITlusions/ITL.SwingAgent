# Example environment configuration for external databases

# === PostgreSQL Configuration ===
# Option 1: Direct database URL
# export SWING_DATABASE_URL="postgresql+psycopg2://username:password@localhost:5432/swing_agent"

# Option 2: Individual components
# export SWING_DB_TYPE=postgresql
# export SWING_DB_HOST=localhost
# export SWING_DB_PORT=5432
# export SWING_DB_NAME=swing_agent
# export SWING_DB_USER=swing_user
# export SWING_DB_PASSWORD=your_secure_password

# === MySQL Configuration ===
# Option 1: Direct database URL
# export SWING_DATABASE_URL="mysql+pymysql://username:password@localhost:3306/swing_agent"

# Option 2: Individual components
# export SWING_DB_TYPE=mysql
# export SWING_DB_HOST=localhost
# export SWING_DB_PORT=3306
# export SWING_DB_NAME=swing_agent
# export SWING_DB_USER=swing_user
# export SWING_DB_PASSWORD=your_secure_password

# === Connection Pool Settings (Optional) ===
# export SWING_DB_POOL_SIZE=5              # Number of connections to maintain
# export SWING_DB_MAX_OVERFLOW=10          # Maximum additional connections
# export SWING_DB_POOL_TIMEOUT=30          # Connection timeout in seconds
# export SWING_DB_POOL_RECYCLE=3600        # Connection recycle time in seconds

# === Debug Settings (Optional) ===
# export SWING_DB_ECHO=true                # Enable SQL query logging

# === Example Production Setup ===
# For production deployments, consider:
# 1. Using a secure secret management system instead of environment variables
# 2. Configuring SSL/TLS connections
# 3. Setting up proper firewall rules
# 4. Using dedicated database users with minimal permissions
# 5. Implementing regular backup procedures
# 6. Setting up monitoring and alerting

# === Usage ===
# 1. Copy this file to .env or similar
# 2. Uncomment and configure the appropriate database section
# 3. Source the file: source .env
# 4. Install database drivers: pip install swing-agent[postgresql] or pip install swing-agent[mysql]
# 5. Run SwingAgent scripts normally - they'll automatically use the external database

# === Docker Compose Example ===
# version: '3.8'
# services:
#   postgres:
#     image: postgres:15
#     environment:
#       POSTGRES_DB: swing_agent
#       POSTGRES_USER: swing_user
#       POSTGRES_PASSWORD: your_secure_password
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#   
#   swing_agent:
#     build: .
#     environment:
#       SWING_DB_TYPE: postgresql
#       SWING_DB_HOST: postgres
#       SWING_DB_NAME: swing_agent
#       SWING_DB_USER: swing_user
#       SWING_DB_PASSWORD: your_secure_password
#     depends_on:
#       - postgres
# 
# volumes:
#   postgres_data: